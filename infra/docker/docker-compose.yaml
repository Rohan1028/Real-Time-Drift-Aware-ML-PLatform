version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: mlops-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: mlflow
      POSTGRES_USER: mlflow
      POSTGRES_PASSWORD: mlflow  # pragma: allowlist secret
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: mlops-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - redis_data:/data

  redpanda:
    image: redpandadata/redpanda:v23.3.5
    container_name: mlops-redpanda
    restart: unless-stopped
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp
      - "1"
      - --memory
      - 1G
      - --reserve-memory
      - 0M
      - --node-id
      - "0"
      - --check=false
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:19092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:9092,PLAINTEXT_HOST://localhost:19092
      - --pandaproxy-addr
      - 0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - redpanda:8082
    ports:
      - "9092:9092"
      - "19092:19092"
      - "9644:9644"
    volumes:
      - redpanda_data:/var/lib/redpanda/data

  minio:
    image: quay.io/minio/minio:RELEASE.2024-07-26T20-48-21Z
    container_name: mlops-minio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123  # pragma: allowlist secret
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data

  minio-setup:
    image: quay.io/minio/mc:latest
    container_name: mlops-minio-setup
    depends_on:
      - minio
    entrypoint: /bin/sh
    command: -c "set -e; mc alias set local http://minio:9000 minio minio123; mc mb --ignore-existing local/mlops-demo"
    restart: "on-failure"

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.12.2
    container_name: mlops-mlflow
    depends_on:
      - postgres
      - minio-setup
    environment:
      MLFLOW_BACKEND_STORE_URI: postgresql+psycopg2://mlflow:mlflow@postgres:5432/mlflow  # pragma: allowlist secret
      MLFLOW_DEFAULT_ARTIFACT_ROOT: s3://mlops-demo
      AWS_ACCESS_KEY_ID: minio  # pragma: allowlist secret
      AWS_SECRET_ACCESS_KEY: minio123  # pragma: allowlist secret
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
    entrypoint: /bin/sh
    command: >-
      -c "pip install --no-cache-dir psycopg2-binary==2.9.9 &&
      mlflow server --backend-store-uri ${MLFLOW_BACKEND_STORE_URI}
      --default-artifact-root s3://mlops-demo --host 0.0.0.0 --port 5000"
    ports:
      - "5000:5000"

  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: mlops-prometheus
    restart: unless-stopped
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:10.4.3
    container_name: mlops-grafana
    depends_on:
      - prometheus
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin  # pragma: allowlist secret
      GF_INSTALL_PLUGINS: grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
    ports:
      - "3000:3000"

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.97.0
    container_name: mlops-otel
    restart: unless-stopped
    command: ["--config=/etc/otel/config.yaml"]
    volumes:
      - ./otel/collector-config.yaml:/etc/otel/config.yaml:ro
    ports:
      - "4317:4317"
      - "4318:4318"

  redpanda-console:
    image: redpandadata/console:latest
    container_name: mlops-redpanda-console
    depends_on:
      - redpanda
    environment:
      KAFKA_BROKERS: redpanda:9092
      CONSOLE_LISTEN_ADDRESS: 0.0.0.0:8080
    ports:
      - "8080:8080"
volumes:
  postgres_data:
  redis_data:
  redpanda_data:
  minio_data:
  prometheus_data:
  grafana_data:


