[tool.poetry]
name = "mlops-drift-platform"
version = "0.1.0"
description = "Real-Time Drift-Aware ML Platform reference monorepo."
license = "MIT"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [
  { include = "services" },
  { include = "scripts" }
]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.110.0"
uvicorn = { extras = ["standard"], version = "^0.27.0" }
ray = { extras = ["serve"], version = "^2.9.1" }
pydantic = "^2.6.1"
pydantic-settings = "^2.1.0"
numpy = ">=1.24,<1.25"
pandas = ">=2.0,<2.2"
scikit-learn = "^1.4.1"
feast = "^0.37.0"
mlflow = "^2.10.0"
boto3 = "^1.34.40"
minio = "^7.2.5"
kafka-python = "^2.0.2"
redis = "^5.0.2"
prometheus-client = "^0.20.0"
evidently = "^0.4.21"
locust = "^2.24.0"
httpx = "^0.27.0"
rich = "^13.7.1"
pyyaml = "^6.0.1"
sqlalchemy = "^2.0.28"
opentelemetry-api = "^1.23.0"
opentelemetry-sdk = "^1.23.0"
opentelemetry-exporter-otlp = "^1.23.0"
opentelemetry-instrumentation-fastapi = "^0.44b0"
prometheus-fastapi-instrumentator = "^6.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.2"
pytest-asyncio = "^0.23.5"
ruff = "^0.3.0"
black = "^24.2.0"
mypy = "^1.8.0"
types-redis = "^4.6.0.20240218"
types-requests = "^2.31.0.20240218"
detect-secrets = "^1.4.0"
pre-commit = "^4.3.0"

[build-system]
requires = ["poetry-core>=1.7.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
select = ["E", "F", "I", "UP", "B", "S"]
ignore = ["E203", "E501"]

[tool.ruff.per-file-ignores]
"docs/**" = ["S101"]
"scripts/**" = ["S101"]

[tool.pytest.ini_options]
testpaths = ["services", "scripts"]
addopts = "-q --strict-markers"

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_untyped_defs = true
ignore_missing_imports = true
